/* Ответ Gemini */
/*
Okay, I understand the issue. The "initially visible transition" when the screen width decreases below 768px (or on page load if already below 768px) happens because:
- When the media query @media (max-width:768px) becomes active, the .menu element gets transform: translateY(-150%); and transition: .3s ease; applied simultaneously.
- The browser sees the transform property changing from its default (or desktop) state (effectively transform: none or translateY(0)) to translateY(-150%).
- Because a transition is defined for transform (implicitly, since transition: .3s ease; applies to all animatable properties), the browser tries to animate this initial change, causing the menu to quickly animate from on-screen to off-screen, which looks like a flicker or a brief appearance.

Root Cause: The transition is active when the initial off-screen positioning styles are applied via the media query.

Solution:
We can use the visibility property in conjunction with transform and carefully manage the transition delays.

- When the menu is closed (in mobile view), it will be visibility: hidden;.
- When it opens, it becomes visibility: visible; immediately, and then the transform animates.
- When it closes, the transform animates, and then it becomes visibility: hidden;.

This ensures that any "initial" transform application (when the media query kicks in) happens while the element is visibility: hidden, so the unwanted animation isn't seen.
*/

/* style.css */

/* Basic Nav Styles (from original) */
.nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: #f0f0f0; /* Added for better visibility */
    padding: 1rem; /* Added for spacing */
    position: relative; /* For absolute positioning of menu */
}

.hamburger {
    padding: 0.5rem 1rem;
    cursor: pointer;
    border: 1px solid #333;
    background-color: #fff;
}

.menu {
    display: flex;
    gap: 2rem;
    list-style: none; /* Recommended */
    padding: 0; /* Recommended */
    margin: 0; /* Recommended */
}

.menu li {
    padding: 0.5rem; /* Example styling */
}

/* Mobile Styles & Fix for Initial Transition */
@media (max-width: 768px) {
    .menu {
        flex-direction: column;
        position: absolute;
        top: 100%; /* Position below the nav bar; adjust if nav height changes */
        /* top: 64px; /* Original, assuming nav is 64px. 100% is more robust if nav height is dynamic */
        left: 0;
        width: 100%;
        background: #fff;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1); /* Added for better visual separation */

        /* Initial (closed) state */
        transform: translateY(-150%);
        visibility: hidden; /* Key: Hide it by default on mobile when closed */
        
        /* 
           Transition for transform, and a delayed transition for visibility.
           When closing: transform animates, then visibility changes after transform is done.
        */
        transition: transform 0.3s ease-in-out, visibility 0s linear 0.3s;
    }

    .menu.open {
        transform: translateY(0);
        visibility: visible;
        /* 
           When opening: make visible immediately, then transform animates.
        */
        transition: transform 0.3s ease-in-out, visibility 0s linear 0s;
    }
}

/*
Explanation of the fix in the media query:

.menu (Closed state on mobile):
- transform: translateY(-150%);: Keeps it off-screen.
- visibility: hidden;: This is crucial. It ensures that when these styles are first applied (on load below 768px or when resizing down), the element is not visible, so any "initial" transform animation isn't seen.
- transition: transform 0.3s ease-in-out, visibility 0s linear 0.3s;:
- transform 0.3s ease-in-out: The slide animation for opening/closing.
- visibility 0s linear 0.3s: When the menu is closing (i.e., the .open class is removed), the visibility will change to hidden after a delay of 0.3s (the duration of the transform). This ensures the menu slides out completely before disappearing. The 0s duration means the change is instant once the delay is over.

.menu.open (Open state on mobile):
- transform: translateY(0);: Brings it on-screen.
- visibility: visible;: Makes it visible.
- transition: transform 0.3s ease-in-out, visibility 0s linear 0s;:
- transform 0.3s ease-in-out: Same slide animation.
- visibility 0s linear 0s: When the menu is opening, the visibility changes to visible immediately (delay 0s). This allows the slide-in animation to be seen.

This setup ensures that the menu is only made visible when it's intentionally opened, and the initial application of styles doesn't cause an unwanted visual transition.

(Также был предложен базовый кусок JS, который бы это всё обрабатывал:
    document.addEventListener('DOMContentLoaded', () => {
        const menuBtn = document.getElementById('menuBtn');
        const menu = document.getElementById('menu');

        if (menuBtn && menu) {
            menuBtn.addEventListener('click', () => {
                menu.classList.toggle('open');
            });
        }
    });
)
*/